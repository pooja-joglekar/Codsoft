# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XYnEbFFUYO1IkH7HbwNBAfPTgMWJwHwu
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

data = pd.read_csv("/content/drive/MyDrive/Churn_Modelling.csv")
data

data.info()

data.columns

data=data.drop('Surname' , axis=1)

data.columns

data

from sklearn.preprocessing import LabelEncoder
LE = LabelEncoder()
data["Gender"] = LE.fit_transform(data["Gender"])
data["Geography"] = LE.fit_transform(data["Geography"])

data

# Calculate counts of unique values in the "Exited" and "NumOfProducts" columns
exit_counts = data["Exited"].value_counts()
num_counts = data["NumOfProducts"].value_counts()

# Create a pie chart for "Exited" counts
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)  # Subplot for the pie chart
plt.pie(exit_counts, labels=["No", "YES"], autopct="%0.0f%%")
plt.title("Exited Counts")

# Create a bar chart for "NumOfProducts" counts
plt.subplot(1, 2, 2)  # Subplot for the bar chart
plt.bar(num_counts.index, num_counts.values, width=0.4)
plt.xlabel("Number of Products")
plt.ylabel("Count")
plt.title("Number of Products Counts")
plt.xticks(np.arange(0,5,1))
plt.tight_layout()  # Adjust layout to prevent overlapping
plt.show()

X = data[["RowNumber","CreditScore", "Geography", "Gender", "Age", "Tenure", "Balance", "NumOfProducts", "HasCrCard","IsActiveMember","EstimatedSalary"]]
Y = data["Exited"]

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size= 0.2, random_state=42)

model = RandomForestClassifier()
model.fit(X_train, Y_train)

model.score(X_train, Y_train)

y_pred = model.predict(X_test)
y_pred

accuracy = accuracy_score(Y_test, y_pred)
print("Model Accuracy:", accuracy)